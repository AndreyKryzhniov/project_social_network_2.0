{"version":3,"sources":["redux/dialogs-reducer.js","Images/smallAvatar.png","Components/common/Paginator/Paginator.module.css","Components/Users/Users.module.css","Images/Deafult-Profile-Pitcher.png","Images/Spinner-1s-200px.svg","Components/Profile/Profile.module.css","Images/not_foto.jfif","serviceWorker.js","api/api.js","redux/profile-reduce.js","redux/sidebar-reducer.js","Components/common/helperComponent/functionsCase.js","redux/users-reduce.js","redux/auth-reduce.js","redux/app-reduce.js","redux/redux-store.js","Components/NavBar/NavBar.js","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Components/common/Paginator/Paginator.js","Components/Users/User/User.js","Components/Users/Users.js","Components/common/Preloader/Preloader.js","redux/users-selectors.js","Components/Users/UsersContainer.js","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileContacts/ProfileDataForm.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js","Components/Header/Header.js","Components/Header/HeaderComponent.js","Components/Login/Login.js","App.js","hoc/withSuspense.js","index.js","Components/validators/validators.js","Components/common/FormsControls/FormsControls.module.css","Components/Profile/MyPosts/Post/Post.module.css","hoc/withAuthRedirect.js","Components/NavBar/NavBar.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Header/Header.module.css","Components/common/FormsControls/FormsControls.js"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSize","get","AuthAPI","email","password","rememberMe","captcha","post","delete","FollowAPI","u","UnfollowAPI","userProfile","userId","status","put","photo","formData","FormData","append","profile","ADD_POST","SET_USERS_PROFILE","CHANGE_STATUS","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likesCount","changeStatus","setUserProfileThunkAC","dispatch","a","response","data","getStatusThunkAC","UserId","profileReducer","newPost","photos","sidebar","url","sidebarReducer","followUnfollow","items","objPropName","itemId","newObjProps","map","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","followingIsProgress","isFetching","follow","unfollow","setUsers","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","login","isAuth","captchaURL","setUserData","setUserDataThunkAC","logoutThunkAC","getCaptchaTC","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","navBarPage","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","props","navBarElements","getState","n","className","s","item","key","to","activeClassName","active","nav","News","Music","Settings","Paginator","totalItemsCount","setCurrentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","e","User","user","src","small","userPhoto","smallAvatar","disabled","some","Users","Preloader","loading","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingIsProgress","UsersContainer","numberPage","setCurrentPageThunkAC","this","getUsersThunkAC","unfollowThunkAC","followThunkAC","React","Component","mapDispatchToProps","totalCount","connect","withRouter","withAuthRedirect","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","statusBlock","onBlur","updateStatusThunkAC","onChange","currentTarget","value","autoFocus","ProfileDataFormReduxForm","reduxForm","handleSubmit","error","onSubmit","formSummaryError","createField","Input","Textarea","Object","keys","contacts","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfileTC","descriptionBlock","avatar","large","target","files","length","initialValues","then","Post","container","content","maxLength","maxLengthCreator","MyPosts","memo","postElement","postsBlock","MyPostReduxForm","addPost","Field","component","placeholder","validate","required","MyPostsContainer","addPostActionCreator","Profile","savePhotoTC","ProfileContainer","params","refreshProfile","prevProps","prevState","snapshot","file","stopSubmit","_error","Promise","reject","Header","header","logo","loginBlock","HeaderComponent","LoginReduxForm","loginThunkAC","DialogsContainer","lazy","App","catchAllUnhandledErrors","alert","initializeAppThunk","addEventListener","removeEventListener","render","path","fallback","patch","promise","promiseOne","promiseTwo","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mapStateToPropsRedirect","RedirectComponent","FormControl","input","meta","touched","children","hasError","formControl","restProps","child","text"],"mappings":"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","file":"static/js/main.454119d2.chunk.js","sourcesContent":["const ADD_MESSAGE = 'samurai-network/dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: '0', name: 'Andrey'},\r\n        {id: '1', name: 'Dima'},\r\n        {id: '2', name: 'Alina'},\r\n        {id: '3', name: 'Olia'},\r\n        {id: '4', name: 'Pasha'}\r\n    ],\r\n    messages: [\r\n        {id: '0', message: 'Hi!'},\r\n        {id: '1', message: 'How are you?'},\r\n        {id: '2', message: 'Am fine'},\r\n        {id: '3', message: 'And you?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: '4', message: action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/smallAvatar.4c0625be.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__pvjj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallAvatar\":\"Users_smallAvatar__3hvqj\",\"img\":\"Users_img__3Oqix\"};","module.exports = __webpack_public_path__ + \"static/media/Deafult-Profile-Pitcher.782adc2b.png\";","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.f082f31e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"Profile_fon__2DUzt\",\"avatar\":\"Profile_avatar__oQpVE\",\"statusBlock\":\"Profile_statusBlock__rIMGX\"};","module.exports = __webpack_public_path__ + \"static/media/not_foto.9074cab8.jfif\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '31066793-0c82-43e0-88fb-db49a2d80799'}\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 20, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    getSecurity() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\nexport const FollowAPI = {\r\n    getFollow(u = 4917) {\r\n        return instance.post(`follow/${u.id}`)\r\n    }\r\n}\r\n\r\nexport const UnfollowAPI = {\r\n    getUnfollow(u = 4917) {\r\n        return instance.delete(`follow/${u.id}`)\r\n    }\r\n}\r\n\r\nexport const userProfile = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    getStatus(userId = 4917) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    savePhoto(photo) {\r\n        let formData = new FormData()\r\n        formData.append('image', photo)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n","import {userProfile} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'samurai-network/profile/ADD-POST';\r\nconst SET_USERS_PROFILE = 'samurai-network/profile/SET_USERS_PROFILE';\r\nconst LOOKING_FOR_A_JOB = 'samurai-network/profile/LOOKING_FOR_A_JOB';\r\nconst CHANGE_STATUS = 'samurai-network/profile/CHANGE_STATUS';\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'samurai-network/profile/SAVE_PHOTO_SUCCESS'\r\nconst SAVE_PROFILE = 'samurai-network/profile/SAVE_PROFILE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: '1', message: 'Hi!', likesCount: '20'},\r\n        {id: '2', message: 'How are you?', likesCount: '2'}\r\n    ],\r\n    profile: null,\r\n    // lookingForAJob: true,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: '3', message: action.newPost, likesCount: '0'}]\r\n            }\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case CHANGE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost})\r\nexport const setUserProfile = (profile) => ({type: SET_USERS_PROFILE, profile})\r\nexport const lookingForAJob = (lookingForAJob) => ({type: LOOKING_FOR_A_JOB, lookingForAJob})\r\nexport const changeStatus = (status) => ({type: CHANGE_STATUS, status})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n\r\nexport const setUserProfileThunkAC = (userId) => async (dispatch) => {\r\n    if (!userId) {\r\n        userId = 4917\r\n    }\r\n    let response = await userProfile.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\n\r\nexport const getStatusThunkAC = (UserId) => async (dispatch) => {\r\n    let response = await userProfile.getStatus(UserId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatusThunkAC = (status) => async (dispatch) => {\r\n    let response = await userProfile.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(changeStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhotoTC = (file) => async (dispatch) => {\r\n    let response = await userProfile.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfileTC = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await userProfile.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserProfileThunkAC(userId))\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\nexport default profileReducer","let initialState = {\r\n        sidebar: [\r\n            {url: '/profile', name: 'Profile'},\r\n            {url: '/dialogs', name: 'Dialogs'},\r\n            {url: '/news', name: 'News'},\r\n            {url: '/music', name: 'Music'},\r\n            {url: '/settings', name: 'Settings'},\r\n            {url: '/users', name: 'Friends'}\r\n        ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","export const followUnfollow = (items, objPropName, itemId, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {FollowAPI, UnfollowAPI, UsersAPI} from \"../api/api\";\r\nimport {followUnfollow} from \"../Components/common/helperComponent/functionsCase\";\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    followingIsProgress: [],\r\n    isFetching: false\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, 'id', action.userId, {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, 'id', action.userId, {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingIsProgress: action.isFetching\r\n                    ? [...state.followingIsProgress, action.userId]\r\n                    : state.followingIsProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsersThunkAC = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await UsersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nexport const setCurrentPageThunkAC = (numberPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(numberPage))\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await UsersAPI.getUsers(numberPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, u, userId, apiMethod, actionCreator) => {\r\n    await dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = apiMethod\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator)\r\n    }\r\n    await dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followThunkAC = (u, userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, u, userId, await FollowAPI.getFollow(u), follow(userId))\r\n}\r\n\r\nexport const unfollowThunkAC = (u, userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, u, userId, await UnfollowAPI.getUnfollow(u), unfollow(userId))\r\n}\r\n\r\n\r\n\r\n\r\nexport default usersReducer","import {AuthAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            debugger\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\nexport const getCaptchaUrlSuccess = (captchaURL) => ({type: GET_CAPTCHA_URL_SUCCESS, data: {captchaURL}})\r\n\r\nexport const setUserDataThunkAC = () => async (dispatch) => {\r\n    let response = await AuthAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login,} = response.data.data\r\n        dispatch(setUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunkAC = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataThunkAC())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaTC())\r\n        }\r\n        let messages = response.data.messages.length > 0 ? response.data.messages : 'Error...maybe you are a bad person'\r\n        dispatch(stopSubmit('login', {_error: messages}))\r\n    }\r\n}\r\n\r\nexport const logoutThunkAC = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaTC = () => async (dispatch) => {\r\n    let response = await AuthAPI.getSecurity()\r\n    let captcha = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captcha))\r\n}\r\n\r\n\r\nexport default authReducer\r\n","import {setUserDataThunkAC} from \"./auth-reduce\";\r\nimport {getStatusThunkAC, setUserProfileThunkAC} from \"./profile-reduce\";\r\n\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessdAC = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeAppThunk =  () => (dispatch) => {\r\n    let promise = dispatch(setUserDataThunkAC())\r\n    let promiseOne = dispatch(setUserProfileThunkAC())\r\n    let promiseTwo = dispatch(getStatusThunkAC())\r\n    Promise.all([promise, promiseOne, promiseTwo])\r\n        .then(()=> {\r\n            dispatch(initializedSuccessdAC())\r\n        })\r\n}\r\n\r\nexport default appReducer\r\n","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reduce\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reduce\";\r\nimport authReducer from \"./auth-reduce\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reduce\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navBarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = (props) => {\r\n    let state = props.store.getState().navBarPage\r\n    let navBarElements = state.sidebar.map(n =>\r\n        <div className={s.item} key={n.key}>\r\n            <NavLink to={n.url} activeClassName={s.active}>\r\n                {n.name}\r\n            </NavLink>\r\n        </div>)\r\n    return (\r\n    <div className={s.nav}>\r\n        {navBarElements}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, setCurrentPage, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>PREF</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p} className={currentPage === p && s.selectedPage}\r\n                                 onClick={(e) => {\r\n                                     setCurrentPage(p)\r\n                                 }}>{p} </span>\r\n                }\r\n            )}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n        </div>)\r\n\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport s from \"../Users.module.css\";\r\nimport userPhoto from \"../../../Images/Deafult-Profile-Pitcher.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                             className={s.smallAvatar}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {props.user.followed ? <button disabled={props.followingIsProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.unfollow(props.user, props.user.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={props.followingIsProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.follow(props.user, props.user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n        <span>\r\n                <span>\r\n                    <div>{props.user.name}</div>\r\n                    <div>{props.user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let unfollow = (u, userId) => {\r\n        props.unfollow(u, userId)\r\n    }\r\n\r\n    let follow = (u, userId) => {\r\n        props.follow(u, userId)\r\n    }\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={props.totalUsersCount}\r\n                   pageSize={props.pageSize}\r\n                   currentPage={props.currentPage}\r\n                   setCurrentPage={props.setCurrentPage} />\r\n        <div>{props.usersPage.map(u => <User {...props} unfollow={unfollow} follow={follow} user={u} key={u.id}/>)}</div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import loading from \"../../../Images/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={loading}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingIsProgress = (state) => {\r\n    return state.usersPage.followingIsProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunkAC, getUsersThunkAC,\r\n    setCurrentPageThunkAC,\r\n    unfollowThunkAC\r\n} from \"../../redux/users-reduce\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingIsProgress,\r\n    getIsFetching, getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkAC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    setCurrentPage = (numberPage) => {\r\n\r\n        this.props.setCurrentPageThunkAC(numberPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    <Preloader/> : null}\r\n                    <Users currentPage={this.props.currentPage}\r\n                                          totalUsersCount={this.props.totalUsersCount}\r\n                                          pageSize={this.props.pageSize}\r\n                                          setCurrentPage={this.setCurrentPage}\r\n                                          usersPage={this.props.usersPage}\r\n                                          unfollow={this.props.unfollowThunkAC}\r\n                                          follow={this.props.followThunkAC}\r\n                                          auth={this.props.auth}\r\n                                          // toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                                          followingIsProgress={this.props.followingIsProgress}\r\n                    />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingIsProgress: getFollowingIsProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    getUsersThunkAC,\r\n    setCurrentPageThunkAC,\r\n    followThunkAC,\r\n    unfollowThunkAC\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState, useEffect} from 'react';\r\nimport p from '../../Profile.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(true)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)}, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(true)\r\n        props.updateStatusThunkAC(status)\r\n    }\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={p.statusBlock} onClick={activateEditMode}>\r\n            {editMode\r\n                ? <span>{status}</span>\r\n                :\r\n                <input onBlur={deactivateEditMode} onChange={onChangeStatus} value={status} autoFocus={true}/>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport s from \"../../../common/FormsControls/FormsControls.module.css\";\r\n// import {required} from \"../../../validators/validators\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button>Save</button>\r\n            {error && <div className={s.formSummaryError}>\r\n                <span>{error}</span>\r\n            </div>}\r\n        </div>\r\n        <div>\r\n            <b>Full name:</b> {createField('Full name', Input, 'fullName', [])}\r\n        </div>\r\n        <div>\r\n            <b>Looking fo a job:</b> {createField('', Input, 'lookingForAJob', null, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills:</b>\r\n            {createField('My professional skills', Textarea, 'lookingForAJobDescription', [])}\r\n        </div>\r\n        <div>\r\n            <b>About me:</b>{createField('About me', Textarea, 'aboutMe', [])}\r\n        </div>\r\n        <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n            return <div>\r\n                <b>\r\n                    {key}: {createField(key, Input, 'contacts.' + key, [])}\r\n                </b>\r\n            </div>\r\n        })}</div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../Images/not_foto.jfif\";\r\nimport ProfileDataFormReduxForm from \"./ProfileContacts/ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusThunkAC, isOwner, savePhoto, saveProfileTC}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    // useEffect(() => {\r\n    //     setEditMode(false)\r\n    // }, [])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfileTC(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div><img className={s.avatar} src={profile.photos.large || userPhoto}/></div>\r\n                <div>{isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}</div>\r\n                {\r\n                    editMode ?\r\n                        <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> :\r\n                        <ProfileData goToEditMode={() => setEditMode(true)} profile={profile} isOwner={isOwner}/>\r\n                }\r\n                <ProfileStatusWithHooks status={status} updateStatusThunkAC={updateStatusThunkAC}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\r\n    return <div>\r\n        {isOwner &&\r\n        <div>\r\n            <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n        }\r\n        <div><b>Full name:</b> {profile.fullName}</div>\r\n        <div><b>Looking fo a job:</b> {profile.lookingForAJob ? 'YES' : 'NO'}</div>\r\n        {profile.lookingForAJob &&\r\n        <div><b>My professional skills:</b>{profile.lookingForAJobDescription}</div>\r\n        }\r\n        <div><b>About me:</b>{profile.aboutMe}</div>\r\n        <div><b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}</div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        {contactValue &&\r\n        <div className={s.contacts}><b>{contactTitle}:</b>{contactValue}</div>\r\n        }\r\n    </div>\r\n    // return <div className={s.contacts}><b>{contactTitle}:</b>{contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport smallAvatar from '../../../../Images/smallAvatar.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                <img className={s.smallAvatar}\r\n                     src={smallAvatar}/>\r\n            </div>\r\n            <div className={s.content}>\r\n                <span className={s.item}>{props.message}</span>\r\n                <span className={s.item}>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(20)\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                placeholder={'Enter you message'}\r\n                name={'newPost'}\r\n                validate={[required, maxLength]}/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElement = props.profilePage.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <MyPostReduxForm onSubmit={onAddPost}/>\r\n            </div>\r\n            {postElement}\r\n        </div>\r\n    );\r\n})\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'newPost'})(MyPostForm)\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reduce\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatusThunkAC={props.updateStatusThunkAC}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhotoTC} saveProfileTC={props.saveProfileTC}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkAC,\r\n    lookingForAJob,\r\n    setUserProfileThunkAC, updateStatusThunkAC, savePhotoTC, saveProfileTC\r\n} from \"../../redux/profile-reduce\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n        this.props.setUserProfileThunkAC(userId)\r\n        this.props.getStatusThunkAC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} isOwner={!this.props.match.params.userId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        lookingForAJob: state.profilePage.lookingForAJob,\r\n        userId: state.auth.id,\r\n        large: state.profilePage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfileThunkAC,\r\n            lookingForAJob,\r\n            getStatusThunkAC,\r\n            updateStatusThunkAC,\r\n            savePhotoTC,\r\n            saveProfileTC\r\n        }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n    const logout = () => {\r\n        props.logoutThunkAC()\r\n    }\r\n\r\n  return (\r\n      <header className={s.header}>\r\n        <img className={s.logo} src='http://www.marketer.ru/wp-content/uploads/2011/10/wwf-logo-design.jpg'/>\r\n        <div className={s.loginBlock}>\r\n            {props.auth ?\r\n                <div>{props.login} - <button onClick={logout}>Log out</button>\r\n                </div> : <NavLink to='/login'>Login</NavLink>}\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkAC} from \"../../redux/auth-reduce\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutThunkAC})\r\n)\r\n(HeaderComponent);\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkAC, logoutThunkAC} from \"../../redux/auth-reduce\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \".././common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nlet maxLength = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaURL}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', Input, 'email', [required, maxLength])}\r\n            {createField('Password', Input, 'password', [required, maxLength], {type: 'password'})}\r\n            {createField(null, Input, 'rememberMe', null, {type: 'checkbox'}, 'remember me')}\r\n            {captchaURL &&\r\n            <div>\r\n                {createField('Symbols from image', Input, 'captcha', [required])}\r\n                <img src={captchaURL}/>\r\n            </div>\r\n            }\r\n            {error && <div className={s.formSummaryError}>\r\n                <span>{error}</span>\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({loginThunkAC, isAuth, captchaURL}) => {\r\n    const onSubmit = (formData) => {\r\n        return (loginThunkAC(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={captchaURL}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaURL: state.auth.captchaURL,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkAC, logoutThunkAC})(Login)","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderComponent from \"./Components/Header/HeaderComponent\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeAppThunk} from \"./redux/app-reduce\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n// import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\n\r\n\r\nclass App extends Component {\r\n\r\n    catchAllUnhandledErrors = () => {\r\n        alert('Some error occured')\r\n}\r\n\r\n    componentDidMount() {\r\n        this.props.initializeAppThunk()\r\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors)\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderComponent/>\r\n                <NavBar store={this.props.store}/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route render={() => <ProfileContainer/>} path='/profile/:userId?'/>\r\n                        <Route render={withSuspense(DialogsContainer)} path='/dialogs'/>\r\n                        <Route render={() => <Music/>} path='/news'/>\r\n                        <Route render={() => <News/>} path='/music'/>\r\n                        <Route render={() => <Settings/>} path='/settings'/>\r\n                        <Route render={() => <UsersContainer/>} path='/users'/>\r\n                        <Route render={() => <Login/>} patch='/login'/>\r\n                        <Route render={() => <div>404 not found</div>} patch='*'/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeAppThunk})\r\n)\r\n(App);\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport let withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App store={store}/>\r\n        </Provider>\r\n    </HashRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__Pwp-M\",\"error\":\"FormsControls_error__3u1j7\",\"formSummaryError\":\"FormsControls_formSummaryError__33_ZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__2HNyo\",\"smallAvatar\":\"Post_smallAvatar__2zuCO\",\"content\":\"Post_content__31Xna\",\"item\":\"Post_item__2C6tS\"};","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return compose(connect(mapStateToPropsRedirect))(RedirectComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__VGEmp\",\"item\":\"NavBar_item__3tuKo\",\"active\":\"NavBar_active__9G2bi\",\"itemFriends\":\"NavBar_itemFriends__1fL3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"ProfileInfo_avatar__1Vs4s\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3o86Y\",\"contacts\":\"ProfileInfo_contacts__3ZsR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32FYr\",\"logo\":\"Header_logo__1LKxl\",\"loginBlock\":\"Header_loginBlock__2vLxK\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n    let hasError = touched && error\r\n\r\n    return (\r\n        <div className={hasError ? s.formControl + ' ' + s.error : null}>\r\n            <div>{children}</div>\r\n            {hasError ? <span>{error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, component, name, validate, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} component={component} name={name} validate={validate} {...props}/> {text}\r\n        </div>)\r\n}\r\n"],"sourceRoot":""}