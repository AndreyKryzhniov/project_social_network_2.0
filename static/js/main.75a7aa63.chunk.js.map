{"version":3,"sources":["redux/dialogs-reducer.js","Images/smallAvatar.png","Components/common/Paginator/Paginator.module.css","Components/Users/Users.module.css","Images/Deafult-Profile-Pitcher.png","Images/Spinner-1s-200px.svg","Components/Profile/Profile.module.css","Components/common/FormsControls/FormsControls.js","serviceWorker.js","api/api.js","redux/profile-reduce.js","redux/sidebar-reducer.js","Components/common/helperComponent/functionsCase.js","redux/users-reduce.js","redux/auth-reduce.js","redux/app-reduce.js","redux/redux-store.js","Components/NavBar/NavBar.js","Components/News/News.js","Components/Music/Music.js","Components/Settings/Settings.js","Components/common/Paginator/Paginator.js","Components/Users/User/User.js","Components/Users/Users.js","Components/common/Preloader/Preloader.js","redux/users-selectors.js","Components/Users/UsersContainer.js","Components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","Components/Profile/ProfileInfo/ProfileInfo.js","Components/Profile/MyPosts/Post/Post.js","Components/Profile/MyPosts/MyPosts.js","Components/Profile/MyPosts/MyPostsContainer.js","Components/Profile/Profile.js","Components/Profile/ProfileContainer.js","Components/Header/Header.js","Components/Header/HeaderComponent.js","Components/Login/Login.js","App.js","hoc/withSuspense.js","index.js","Components/validators/validators.js","Components/Profile/MyPosts/Post/Post.module.css","Components/common/FormsControls/FormsControls.module.css","hoc/withAuthRedirect.js","Components/NavBar/NavBar.module.css","Components/Header/Header.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessageActionCreator","newMessageBody","type","dialogsReducer","state","action","module","exports","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validate","text","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","UsersAPI","currentPage","pageSize","get","AuthAPI","email","password","rememberMe","post","delete","FollowAPI","u","UnfollowAPI","getUserProfile","userId","userProfileStatus","status","put","ADD_POST","SET_USERS_PROFILE","LOOKING_FOR_A_JOB","CHANGE_STATUS","SET_STATUS","posts","likesCount","profile","lookingForAJob","changeStatus","setUserProfileThunkAC","dispatch","a","response","data","getStatusThunkAC","UserId","profileReducer","newPost","sidebar","url","sidebarReducer","followUnfollow","items","objPropName","itemId","newObjProps","map","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","users","totalUsersCount","followingIsProgress","isFetching","follow","unfollow","setUsers","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","resultCode","usersReducer","followed","count","filter","SET_USER_DATA","login","isAuth","setUserData","setUserDataThunkAC","logoutThunkAC","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","navBarPage","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","NavBar","navBarElements","getState","n","item","key","to","activeClassName","active","nav","News","Music","Settings","Paginator","totalItemsCount","setCurrentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","selectedPage","User","user","src","photos","small","userPhoto","smallAvatar","disabled","some","Users","Preloader","loading","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingIsProgress","UsersContainer","numberPage","setCurrentPageThunkAC","this","getUsersThunkAC","unfollowThunkAC","followThunkAC","React","Component","mapDispatchToProps","totalCount","connect","withRouter","withAuthRedirect","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","statusBlock","onBlur","updateStatusThunkAC","onChange","e","currentTarget","value","autoFocus","ProfileInfo","descriptionBlock","avatar","large","fullName","Post","container","content","maxLength","maxLengthCreator","MyPosts","memo","postElement","postsBlock","MyPostReduxForm","onSubmit","addPost","reduxForm","handleSubmit","Field","required","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","Header","header","logo","loginBlock","HeaderComponent","LoginReduxForm","formSummaryError","loginThunkAC","length","stopSubmit","_error","formData","DialogsContainer","lazy","App","initializeAppThunk","render","path","fallback","patch","promise","promiseOne","promiseTwo","Promise","all","then","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","mapStateToPropsRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.75a7aa63.chunk.js","sourcesContent":["const ADD_MESSAGE = 'samurai-network/dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: '0', name: 'Andrey'},\r\n        {id: '1', name: 'Dima'},\r\n        {id: '2', name: 'Alina'},\r\n        {id: '3', name: 'Olia'},\r\n        {id: '4', name: 'Pasha'}\r\n    ],\r\n    messages: [\r\n        {id: '0', message: 'Hi!'},\r\n        {id: '1', message: 'How are you?'},\r\n        {id: '2', message: 'Am fine'},\r\n        {id: '3', message: 'And you?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: '4', message: action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/smallAvatar.4c0625be.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__pvjj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallAvatar\":\"Users_smallAvatar__3hvqj\",\"img\":\"Users_img__3Oqix\"};","module.exports = __webpack_public_path__ + \"static/media/Deafult-Profile-Pitcher.782adc2b.png\";","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.f082f31e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"Profile_fon__2DUzt\",\"avatar\":\"Profile_avatar__oQpVE\",\"statusBlock\":\"Profile_statusBlock__rIMGX\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n\r\n    let hasError = touched && error\r\n\r\n    return (\r\n        <div className={hasError ? s.formControl + ' ' + s.error : null}>\r\n            <div>{children}</div>\r\n            {hasError ? <span>{error}</span> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input  {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, component, name, validate, props = {}, text = '') => {\r\n    return (\r\n        <div>\r\n            <Field validate={validate} component={component} placeholder={placeholder} name={name}{...props}/> {text}\r\n        </div>)\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {'API-KEY': '31066793-0c82-43e0-88fb-db49a2d80799'}\r\n})\r\n\r\n\r\nexport const UsersAPI = {\r\n    getUsers(currentPage = 20, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const FollowAPI = {\r\n    getFollow(u = 4917) {\r\n        return instance.post(`follow/${u.id}`)\r\n    }\r\n}\r\n\r\nexport const UnfollowAPI = {\r\n    getUnfollow(u = 4917) {\r\n        return instance.delete(`follow/${u.id}`)\r\n    }\r\n}\r\n\r\nexport const getUserProfile = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    }\r\n}\r\n\r\nexport const userProfileStatus = {\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    getStatus(userId = 4917) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    }\r\n}\r\n","import {getUserProfile, userProfileStatus} from \"../api/api\";\r\n\r\nconst ADD_POST = 'samurai-network/profile/ADD-POST';\r\nconst SET_USERS_PROFILE = 'samurai-network/profile/SET_USERS_PROFILE';\r\nconst LOOKING_FOR_A_JOB = 'samurai-network/profile/LOOKING_FOR_A_JOB';\r\nconst CHANGE_STATUS = 'samurai-network/profile/CHANGE_STATUS';\r\nconst SET_STATUS = 'samurai-network/profile/SET_STATUS'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: '1', message: 'Hi!', likesCount: '20'},\r\n        {id: '2', message: 'How are you?', likesCount: '2'}\r\n    ],\r\n    profile: null,\r\n    lookingForAJob: true,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: '3', message: action.newPost, likesCount: '0'}]\r\n            }\r\n        case SET_USERS_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case LOOKING_FOR_A_JOB: {\r\n            return {\r\n                ...state,\r\n                lookingForAJob: action.lookingForAJob\r\n            }\r\n        }\r\n        case CHANGE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost})\r\nexport const setUserProfile = (profile) => ({type: SET_USERS_PROFILE, profile})\r\nexport const lookingForAJob = (lookingForAJob) => ({type: LOOKING_FOR_A_JOB, lookingForAJob})\r\nexport const changeStatus = (status) => ({type: CHANGE_STATUS, status})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\n\r\nexport const setUserProfileThunkAC = (userId) => async (dispatch) => {\r\n    if (!userId) {userId = 4917}\r\n    let response = await getUserProfile.getProfile(userId)\r\n            dispatch(setUserProfile(response.data))\r\n            dispatch(lookingForAJob(true))\r\n}\r\n\r\n\r\nexport const getStatusThunkAC = (UserId) => async (dispatch) => {\r\n    let response = await userProfileStatus.getStatus(UserId)\r\n                dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatusThunkAC = (status) => async (dispatch) => {\r\n   let response = await userProfileStatus.updateStatus(status)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(changeStatus(status))\r\n                }\r\n}\r\n\r\nexport default profileReducer","let initialState = {\r\n        sidebar: [\r\n            {url: '/profile', name: 'Profile'},\r\n            {url: '/dialogs', name: 'Dialogs'},\r\n            {url: '/news', name: 'News'},\r\n            {url: '/music', name: 'Music'},\r\n            {url: '/settings', name: 'Settings'},\r\n            {url: '/users', name: 'Friends'}\r\n        ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer","export const followUnfollow = (items, objPropName, itemId, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {FollowAPI, UnfollowAPI, UsersAPI} from \"../api/api\";\r\nimport {followUnfollow} from \"../Components/common/helperComponent/functionsCase\";\r\n\r\nconst FOLLOW = 'samurai-network/users/FOLLOW';\r\nconst UNFOLLOW = 'samurai-network/users/UNFOLLOW';\r\nconst SET_USERS = 'samurai-network/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'samurai-network/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'samurai-network/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'samurai-network/users/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'samurai-network/users/TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    followingIsProgress: [],\r\n    isFetching: false\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, 'id', action.userId, {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: followUnfollow(state.users, 'id', action.userId, {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingIsProgress: action.isFetching\r\n                    ? [...state.followingIsProgress, action.userId]\r\n                    : state.followingIsProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const getUsersThunkAC = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await UsersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items));\r\n    dispatch(setTotalUsersCount(response.data.totalCount))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, u, userId, apiMethod, actionCreator) => {\r\n    await dispatch(toggleIsFollowingProgress(true, userId))\r\n    let response = apiMethod\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator)\r\n    }\r\n    await dispatch(toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followThunkAC = (u, userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, u, userId, await FollowAPI.getFollow(u), follow(userId))\r\n}\r\n\r\nexport const unfollowThunkAC = (u, userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, u, userId, await UnfollowAPI.getUnfollow(u), unfollow(userId))\r\n}\r\n\r\nexport const setCurrentPageThunkAC = (numberPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(numberPage))\r\n    dispatch(toggleIsFetching(true))\r\n    let response = await UsersAPI.getUsers(numberPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(response.data.items))\r\n}\r\n\r\n\r\nexport default usersReducer","import {AuthAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state, ...action.data, isAuth: action.data.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, data: {id, email, login, isAuth}})\r\n\r\nexport const setUserDataThunkAC = () => async (dispatch) => {\r\n    let response = await AuthAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login,} = response.data.data\r\n        dispatch(setUserData(id, email, login, true))\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunkAC = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserDataThunkAC())\r\n    } else {\r\n        let messages = response.data.messages.length > 0 ? response.data.messages : 'Error...maybe you are a bad person'\r\n        let action = stopSubmit('login', {_error: messages})\r\n        dispatch(action)\r\n    }\r\n}\r\n\r\nexport const logoutThunkAC = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer\r\n","import {setUserDataThunkAC} from \"./auth-reduce\";\r\nimport {getStatusThunkAC, setUserProfileThunkAC} from \"./profile-reduce\";\r\n\r\nconst INITIALIZED_SUCCESS = 'samurai-network/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccessdAC = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeAppThunk =  () => (dispatch) => {\r\n    let promise = dispatch(setUserDataThunkAC())\r\n    let promiseOne = dispatch(setUserProfileThunkAC())\r\n    let promiseTwo = dispatch(getStatusThunkAC())\r\n    Promise.all([promise, promiseOne, promiseTwo])\r\n        .then(()=> {\r\n            dispatch(initializedSuccessdAC())\r\n        })\r\n}\r\n\r\nexport default appReducer\r\n","import {combineReducers, createStore, applyMiddleware, compose} from \"redux\";\r\nimport profileReducer from \"./profile-reduce\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reduce\";\r\nimport authReducer from \"./auth-reduce\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reduce\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    navBarPage: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = (props) => {\r\n    let state = props.store.getState().navBarPage\r\n    let navBarElements = state.sidebar.map(n =>\r\n        <div className={s.item} key={n.id}>\r\n            <NavLink to={n.url} key={n.id} activeClassName={s.active}>\r\n                {n.name}\r\n            </NavLink>\r\n        </div>)\r\n    return (\r\n    <div className={s.nav}>\r\n        {navBarElements}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;\r\n","import React from 'react';\r\n// import p from './Music.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import React, {useState} from 'react';\r\nimport s from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, setCurrentPage, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = ((portionNumber - 1) * portionSize + 1)\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    debugger\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>PREF</button>}\r\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p} className={currentPage === p && s.selectedPage}\r\n                                 onClick={() => {\r\n                                     setCurrentPage(p)\r\n                                 }}>{p} </span>\r\n                }\r\n            )}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => setPortionNumber(portionNumber + 1)}>NEXT</button>}\r\n        </div>)\r\n\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport s from \"../Users.module.css\";\r\nimport userPhoto from \"../../../Images/Deafult-Profile-Pitcher.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n\r\n    return(\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + props.user.id}>\r\n                        <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto}\r\n                             className={s.smallAvatar}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {props.user.followed ? <button disabled={props.followingIsProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.unfollow(props.user, props.user.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={props.followingIsProgress.some(id => id === props.user.id)} onClick={() => {\r\n                            props.follow(props.user, props.user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n        <span>\r\n                <span>\r\n                    <div>{props.user.name}</div>\r\n                    <div>{props.user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{'u.location.country'}</div>\r\n                    <div>{'u.location.city'}</div>\r\n                </span>\r\n            </span>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default User","import React from 'react'\r\n\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = (props) => {\r\n\r\n    let unfollow = (u, userId) => {\r\n        props.unfollow(u, userId)\r\n    }\r\n\r\n    let follow = (u, userId) => {\r\n        props.follow(u, userId)\r\n    }\r\n\r\n    return <div>\r\n        <Paginator totalItemsCount={props.totalUsersCount}\r\n                   pageSize={props.pageSize}\r\n                   currentPage={props.currentPage}\r\n                   setCurrentPage={props.setCurrentPage} />\r\n        {props.usersPage.map(u => <User {...props} unfollow={unfollow} follow={follow} user={u}  key={u.id}/>)}\r\n    </div>\r\n}\r\n\r\nexport default Users","import loading from \"../../../Images/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nconst Preloader = () => {\r\n    return <div>\r\n        <img src={loading}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","export const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingIsProgress = (state) => {\r\n    return state.usersPage.followingIsProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followThunkAC, getUsersThunkAC,\r\n    setCurrentPageThunkAC,\r\n    unfollowThunkAC\r\n} from \"../../redux/users-reduce\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingIsProgress,\r\n    getIsFetching, getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkAC(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    setCurrentPage = (numberPage) => {\r\n        this.props.setCurrentPageThunkAC(numberPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ?\r\n                    <Preloader/> : <Users currentPage={this.props.currentPage}\r\n                                          totalUsersCount={this.props.totalUsersCount}\r\n                                          pageSize={this.props.pageSize}\r\n                                          setCurrentPage={this.setCurrentPage}\r\n                                          usersPage={this.props.usersPage}\r\n                                          unfollow={this.props.unfollowThunkAC}\r\n                                          follow={this.props.followThunkAC}\r\n                                          auth={this.props.auth}\r\n                                          // toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                                          followingIsProgress={this.props.followingIsProgress}\r\n                    />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingIsProgress: getFollowingIsProgress(state)\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    getUsersThunkAC,\r\n    setCurrentPageThunkAC,\r\n    followThunkAC,\r\n    unfollowThunkAC\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n","import React, {useState, useEffect} from 'react';\r\nimport p from '../../Profile.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(true)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)}, [props.status])\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(true)\r\n        props.updateStatusThunkAC(status)\r\n    }\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={p.statusBlock} onClick={activateEditMode}>\r\n            {editMode\r\n                ? <span>{status}</span>\r\n                :\r\n                <input onBlur={deactivateEditMode} onChange={onChangeStatus} value={status} autoFocus={true}/>\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatusThunkAC}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img className={s.avatar}\r\n                     src={profile.photos.large}/>\r\n                <div>\r\n                    <span>{profile.fullName}</span>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatusThunkAC={updateStatusThunkAC}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport smallAvatar from '../../../../Images/smallAvatar.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div>\r\n                <img className={s.smallAvatar}\r\n                     src={smallAvatar}/>\r\n            </div>\r\n            <div className={s.content}>\r\n                <span className={s.item}>{props.message}</span>\r\n                <span className={s.item}>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from \"./Post/Post\";\r\nimport s from './MyPosts.module.css'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength = maxLengthCreator(20)\r\n\r\nconst MyPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                placeholder={'Enter you message'}\r\n                name={'newPost'}\r\n                validate={[required, maxLength]}/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElement = props.profilePage.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            My posts\r\n            <div>\r\n                <MyPostReduxForm onSubmit={onAddPost}/>\r\n            </div>\r\n            {postElement}\r\n        </div>\r\n    );\r\n})\r\n\r\nconst MyPostReduxForm = reduxForm({form: 'newPost'})(MyPostForm)\r\n\r\n\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reduce\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatusThunkAC={props.updateStatusThunkAC}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkAC,\r\n    lookingForAJob,\r\n    setUserProfileThunkAC, updateStatusThunkAC\r\n} from \"../../redux/profile-reduce\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n        }\r\n        this.props.setUserProfileThunkAC(userId)\r\n        this.props.getStatusThunkAC(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profilePage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        lookingForAJob: state.profilePage.lookingForAJob,\r\n        userId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfileThunkAC,\r\n            lookingForAJob,\r\n            getStatusThunkAC,\r\n            updateStatusThunkAC\r\n        }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Header(props) {\r\n\r\n    const logout = () => {\r\n        props.logoutThunkAC()\r\n    }\r\n\r\n  return (\r\n      <header className={s.header}>\r\n        <img className={s.logo} src='http://www.marketer.ru/wp-content/uploads/2011/10/wwf-logo-design.jpg'/>\r\n        <div className={s.loginBlock}>\r\n            {props.auth ?\r\n                <div>{props.login} - <button onClick={logout}>Log out</button>\r\n                </div> : <NavLink to='/login'>Login</NavLink>}\r\n        </div>\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutThunkAC} from \"../../redux/auth-reduce\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderComponent extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutThunkAC})\r\n)\r\n(HeaderComponent);\r\n","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkAC, logoutThunkAC} from \"../../redux/auth-reduce\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \".././common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nlet maxLength = maxLengthCreator(30)\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', Input, 'email', [required, maxLength])}\r\n            {createField('Password', Input, 'password', [required, maxLength], {type: 'password'})}\r\n            {createField(null, Input, 'rememberMe', null, {type: 'checkbox'}, 'remember me')}\r\n            {error && <div className={s.formSummaryError}>\r\n                <span>{error}</span>\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = ({loginThunkAC, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        return (loginThunkAC(formData.email, formData.password, formData.rememberMe))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkAC, logoutThunkAC})(Login)","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderComponent from \"./Components/Header/HeaderComponent\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeAppThunk} from \"./redux/app-reduce\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n// import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\r\n\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeAppThunk()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderComponent/>\r\n                <NavBar store={this.props.store}/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route render={() => <ProfileContainer/>} path='/profile/:userId?'/>\r\n                    <Route render={withSuspense(DialogsContainer)} path='/dialogs'/>\r\n                    <Route render={() => <Music/>} path='/news'/>\r\n                    <Route render={() => <News/>} path='/music'/>\r\n                    <Route render={() => <Settings/>} path='/settings'/>\r\n                    <Route render={() => <UsersContainer/>} path='/users'/>\r\n                    <Route render={() => <Login/>} patch='/login'/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeAppThunk})\r\n)\r\n(App);\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\nexport let withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Provider store={store}>\r\n            <App store={store}/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`\r\n    return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Post_container__2HNyo\",\"smallAvatar\":\"Post_smallAvatar__2zuCO\",\"content\":\"Post_content__31Xna\",\"item\":\"Post_item__2C6tS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__Pwp-M\",\"error\":\"FormsControls_error__3u1j7\",\"formSummaryError\":\"FormsControls_formSummaryError__33_ZX\"};","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport let withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    return compose(connect(mapStateToPropsRedirect))(RedirectComponent)\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__VGEmp\",\"item\":\"NavBar_item__3tuKo\",\"active\":\"NavBar_active__9G2bi\",\"itemFriends\":\"NavBar_itemFriends__1fL3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__32FYr\",\"logo\":\"Header_logo__1LKxl\",\"loginBlock\":\"Header_loginBlock__2vLxK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fon\":\"ProfileInfo_fon__351z7\",\"avatar\":\"ProfileInfo_avatar__1Vs4s\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3o86Y\"};"],"sourceRoot":""}